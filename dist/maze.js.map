{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/Maze.js","src/js/main.js"],"names":[],"mappings":"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","file":"maze.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","class Maze {\n\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this._DIRECTIONS = {\n            left: -1,\n            right: 1,\n            up: -this.columns,\n            down: this.columns\n        };\n\n        this.tiles = new Array((width * 2 + 1) * (height * 2 + 1)).fill(1);\n    }\n\n    draw(element) {\n        if(element.tagName !== 'CANVAS') {\n            throw new Error('Please supply a canvas element to draw on');\n        }\n\n        const canvas = element.getContext('2d'),\n            wallSize = 1, // TODO: calculate or make customisable\n            tileSize = (element.width - ((this.width + 1) * wallSize)) / this.width;\n\n        canvas.clearRect(0, 0, element.width, element.height);\n\n        this.tiles.forEach((value, tile) => {\n            const col = this.getColumn(tile), // TODO: figure out new algorithms for 0-indexed\n                row = this.getRow(tile),\n                x = (Math.ceil(col / 2) * wallSize) + (Math.ceil(col / 2) - col % 2) * tileSize,\n                y = (Math.ceil(row / 2) * wallSize) + (Math.ceil(row / 2) - row % 2) * tileSize,\n                width  = (col % 2) ? tileSize : wallSize,\n                height = (row % 2) ? tileSize : wallSize;\n\n            canvas.fillStyle = ['white', 'black'][value];\n            canvas.fillRect(x, y, width, height);\n        });\n    }\n\n    generatePath(start, end) {\n        // TODO: move to separate file?\n        // TODO: implement variations (depth first, breadth first, stacked, recursive)\n        let direction = this.getAllowedDirections(start)[0];\n\n        try {\n            this.walk(start, direction);\n        } catch (e) {\n            alert(e + \"\\n\\nTry generating a smaller maze or use the stacked approach (coming soon)\");\n        }\n\n\n        this.setTile(end, 0);\n    }\n\n    walk(from, direction) {\n        let allowedDirections,\n            lastStep,\n            wall = this.isWall(from) ? from : this.getNextTile(from, direction),\n            room = this.getNextTile(wall, direction);\n\n        // Mark as visited\n        this.setTile(wall, 0);\n        this.setTile(room, 0);\n\n        this._log();\n\n        /*jshint boss:true */\n        while(allowedDirections = this.getAllowedDirections(room)) {\n            // TODO: Add option for horizontal/vertical bias\n            let rnd = Math.floor(Math.random() * allowedDirections.length),\n                nextDirection = allowedDirections[rnd];\n\n            lastStep = this.walk(room, nextDirection);\n        }\n\n        return lastStep || room;\n    }\n\n    getAllowedDirections(tile) {\n        let allowed = Object.keys(this._DIRECTIONS).filter((direction) => {\n\n            let nextWall = this.isWall(tile) ? tile : this.getNextTile(tile, direction),\n                nextRoom = this.getNextTile(nextWall, direction);\n\n            return !this.isWall(nextRoom) && !!this.getTile(nextRoom);\n        });\n\n        // Return null instead of empty array so we can use the method in a while condition\n        return (allowed.length > 0) ? allowed : null;\n    }\n\n    getColumn(tile) {\n        return Math.floor(tile % this.columns);\n    }\n\n    getNextTile(tile, direction) {\n        let next = tile + this._DIRECTIONS[direction];\n\n        return this.isAdjacent(tile, next) ? next : null;\n    }\n\n    getRow(tile) {\n        return Math.floor((tile) / this.columns);\n    }\n\n    getTile(tile) {\n        return this.tiles[tile];\n    }\n\n    isAdjacent(tile, next) {\n        return this.getRow(tile) === this.getRow(next) || this.getColumn(tile) === this.getColumn(next);\n    }\n\n    isEdge(tile) {\n        return this.getColumn(tile) === 0 ||\n               this.getRow(tile) === 0 ||\n               this.getColumn(tile) === this.columns - 1 ||\n               this.getRow(tile) === this.rows - 1;\n    }\n\n    isWall(tile) {\n        return this.getRow(tile) % 2 === 0 || this.getColumn(tile) % 2 === 0;\n    }\n\n    setTile(tile, value) {\n        this.tiles[tile] = value;\n    }\n\n    get columns() {\n        return this.width * 2 + 1;\n    }\n\n    get rows() {\n        return this.height * 2 + 1;\n    }\n\n\n    _log() {\n        let output = '';\n\n        this.tiles.forEach((tile, i) => {\n            output += tile;\n\n            if((i + 1) % this.columns === 0) {\n                output += '\\n';\n            }\n        });\n\n        console.log(output);\n    }\n}\n\nmodule.exports = Maze;","// TODO: split into modules\n// TODO: MazeGenerator class?\n// TODO: implement options object as argument\n// TODO: implement maze solver\n(function () {\n\n    var Maze = require('./Maze.js'),\n\n    // TODO: put in one SETTINGS object\n        MAZE_ELEMENT = document.getElementById('maze'),\n        START_BUTTON = document.getElementById('start'),\n        WIDTH = 2,\n        HEIGHT = 2,\n\n    // TODO: make start tile customizable\n        START = 1,\n    // TODO: let user pick end point after generating\n        END = (WIDTH * 2 + 1) * (HEIGHT * 2 + 1) - 2;\n\n    function init() {\n        START_BUTTON.addEventListener('click', start);\n    }\n\n    function start() {\n        let maze = new Maze(WIDTH, HEIGHT);\n\n        maze.generatePath(START, END);\n\n        maze.draw(MAZE_ELEMENT);\n    }\n\n    init();\n}());"]}