{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/Maze.js","src/js/main.js"],"names":[],"mappings":"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","file":"maze.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","class Maze {\n\n    constructor(width, height) {\n        // TODO: don't use objects but simply 1 for wall and 0 for path\n        const DEFAULT_TILE = {\n            visited: false,\n            walls: ['left', 'right', 'up', 'down']\n        };\n\n        this._DIRECTIONS = {\n            left: -1,\n            right: 1,\n            up: -width,\n            down: width\n        };\n\n        this.width = width;\n        this.height = height;\n        this.tiles = [];\n\n        for (let i = 0; i < width * height; i++) {\n            this.tiles[i] = JSON.parse(JSON.stringify(DEFAULT_TILE));\n        }\n    }\n\n    getAllowedDirections(tile) {\n        // TODO: move check to getNextTile\n        var onlyAdjacentTiles = (direction) => {\n            var tileNumber = this.getNextTile(tile, direction),\n                sameRow = this.getRow(tileNumber) === this.getRow(tile),\n                sameCol = this.getColumn(tileNumber) === this.getColumn(tile);\n\n            return sameRow || sameCol;\n        };\n\n        var notVisited = (direction) => {\n            var tileNumber = this.getNextTile(tile, direction),\n                nextTile = this.tiles[tileNumber];\n\n            return nextTile && !nextTile.visited;\n        };\n\n        var allowed = Object.keys(this._DIRECTIONS)\n            .filter(onlyAdjacentTiles)\n            .filter(notVisited);\n\n        // Return null instead of empty array so we can use the method in a while condition\n        return (allowed.length > 0) ? allowed : null;\n    }\n\n    getColumn(tile) {\n        return Math.floor((tile + 1) % this.width);\n    }\n\n    getNextTile(tile, direction) {\n        return tile + this._DIRECTIONS[direction];\n    }\n\n    // Takes any direction and returns the opposite by performing magic on the array\n    // index. 0 <-> 1, 2 <-> 3, etc.\n    getOppositeDirection(direction) {\n        var directions = Object.keys(this._DIRECTIONS),\n            index = directions.indexOf(direction),\n            opposite = (index % 2) ? -1 : 1;\n\n        return directions[index + opposite];\n    }\n\n    getRow(tile) {\n        return Math.ceil((tile + 1) / this.width);\n    }\n\n\n    removeWall(tile, direction) {\n        var walls = this.tiles[tile].walls,\n            index = walls.indexOf(direction);\n\n        return walls.splice(index, 1);\n    }\n}\n\nmodule.exports = Maze;","// TODO: split into modules\n// TODO: MazeGenerator class?\n// TODO: implement options object as argument\n// TODO: implement maze solver\n(function () {\n\n    var Maze = require('./Maze.js'),\n\n        // TODO: put in one SETTINGS object\n        MAZE_ELEMENT = document.getElementById('maze'),\n        START_BUTTON = document.getElementById('start'),\n        WIDTH = 50,\n        HEIGHT = 50,\n\n        START_TILE = 0,\n        START_DIRECTION = 'right',\n\n        maze;\n\n    function init() {\n        START_BUTTON.addEventListener('click', start);\n\n        MAZE_ELEMENT.style.width = WIDTH + 'em';\n        MAZE_ELEMENT.style.height = HEIGHT + 'em';\n    }\n\n    function start() {\n        maze = new Maze(WIDTH, HEIGHT);\n\n        var end = walk(START_TILE - 1, START_DIRECTION);\n        console.log(end);\n\n        drawMaze();\n    }\n\n\n    // TODO: canvas?\n    function drawMaze() {\n        MAZE_ELEMENT.innerHTML = '';\n\n        maze.tiles.forEach((tile) => {\n            var tileElement = document.createElement('div');\n\n            tile.walls.forEach(function (wall) {\n                tileElement.className += ` ${wall}`;\n            });\n\n            tileElement.addEventListener('click', () => {\n                tile.exit = true;\n            });\n\n            MAZE_ELEMENT.appendChild(tileElement);\n        });\n    }\n\n    // TODO: move to separate file, implement variations (depth first, breadth first, stacked, recursive)\n    function walk(from, direction) {\n        var allowedDirections,\n            lastStep,\n            tile = maze.getNextTile(from, direction);\n\n        maze.removeWall(tile, maze.getOppositeDirection(direction));\n        maze.tiles[tile].visited = true;\n\n        /*jshint boss:true */\n        while(allowedDirections = maze.getAllowedDirections(tile)) {\n            var rnd = Math.floor(Math.random() * allowedDirections.length),\n                nextDirection = allowedDirections[rnd];\n\n            maze.removeWall(tile, nextDirection);\n\n            lastStep = walk(tile, nextDirection);\n        }\n\n        return lastStep || tile;\n    }\n\n    init();\n}());"]}